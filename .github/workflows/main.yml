name: luma.oled

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-minor-version: [8, 9, 10, 11, 12, 13]
    name: Python 3.${{ matrix.python-minor-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pip cache
        uses: actions/cache@v4
        id: pipcache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py3${{ matrix.python-minor-version }}-pip-
      - name: Install system dependencies
        run: sudo apt-get install graphviz swig python3-setuptools python3-dev
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.${{ matrix.python-minor-version }}
          check-latest: true
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install lg library
        run: |
          cd $RUNNER_TEMP
          wget http://abyz.me.uk/lg/lg.zip
          unzip lg.zip
          cd lg
          make
          sudo make install
      - name: Install Python packages
        run: pip install --upgrade setuptools pip wheel tox coveralls
      - name: Run tests
        env:
          TOX_ENV: py3${{ matrix.python-minor-version }}
        run: |
          python_env=$(echo $TOX_ENV | sed -e s/-dev$//)
          python -m tox -e ${python_env}
      - name: QA
        env:
          TOX_ENV: qa,doc
        run: python -m tox -e $TOX_ENV
      - name: Coverage
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Coveralls
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
